import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Post from "./Post";
import { useState, useEffect } from "react";
import Modal from "react-modal";
import MakePostButton from "./MakePostButton";
import LoginModal from "./LoginModal";

export default function Home({ posts_prop, filteruser }) {
    const [posts, setPosts] = useState(posts_prop);
    const [modalIsOpen, setModalIsOpen] = useState(false);
    const [username, setUsername] = useState("");
    const [usernameModalOpen, setUsernameModalOpen] = useState(false);

    useEffect(() => {
        // refetch all of the content whenver username changes
        fetchPosts();
    }, [username]);

    function fetchPosts() {
        if (username === "") {
            if (filteruser == null || filteruser == "") {
                fetch(`http://localhost:5000/posts`)
                    .then((res) => res.json())
                    .then((data) => setPosts(data));
            } else {
                console.log(filteruser);
                fetch(`http://localhost:5000/posts?filteruser=${filteruser}`)
                    .then((res) => res.json())
                    .then((data) => setPosts(data));
            }
        } else {
            if (filteruser == null || filteruser == "") {
                fetch(`http://localhost:5000/posts?byuser=${username}`)
                    .then((res) => res.json())
                    .then((data) => setPosts(data));
            } else {
                fetch(
                    `http://localhost:5000/posts?byuser=${username}&filteruser=${filteruser}`
                )
                    .then((res) => res.json())
                    .then((data) => setPosts(data));
            }
        }
    }
    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <div className="fixed top-0 z-10 h-10 bg-slate-200 w-full flex justify-end ">
                    {username != "" ? (
                        <span>
                            <span className="mr-2">
                                logged in as {username}
                            </span>
                            <button
                                onClick={() => {
                                    setUsername("");
                                }}
                                className="bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow"
                            >
                                <span>Logout</span>
                            </button>
                        </span>
                    ) : (
                        <button
                            onClick={() => setUsernameModalOpen(true)}
                            className="bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow"
                        >
                            <span>Login</span>
                        </button>
                    )}
                </div>
                <LoginModal
                    setUsername={setUsername}
                    setLoginModalIsOpen={setUsernameModalOpen}
                    loginModalIsOpen={usernameModalOpen}
                ></LoginModal>
                {posts &&
                    posts.map((p) => (
                        <Post
                            key={p.id}
                            {...p}
                            fetchPosts={fetchPosts}
                            setModalIsOpen={setModalIsOpen}
                            username={username}
                        ></Post>
                    ))}
                <Modal
                    isOpen={modalIsOpen}
                    onAfterOpen={() => {}}
                    ariaHideApp={false}
                    contentLabel="Example Modal"
                    style={{
                        overlay: {
                            position: "fixed",
                            top: 0,
                            left: 0,
                            right: 0,
                            bottom: 0,
                            backgroundColor: "rgba(255, 255, 255, 0.75)",
                        },
                        content: {
                            position: "absolute",
                            top: "25%",
                            left: "25%",
                            border: "1px solid #ccc",
                            background: "#fff",
                            overflow: "auto",
                            WebkitOverflowScrolling: "touch",
                            borderRadius: "4px",
                            outline: "none",
                            padding: "20px",
                            width: "50%",
                            height: "50%",
                        },
                    }}
                >
                    <div className="z-20 h-full flex items-center content-center justify-center">
                        <div>
                            <div className="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100">
                                <svg
                                    className="h-6 w-6 text-green-600"
                                    fill="none"
                                    stroke="currentColor"
                                    viewBox="0 0 24 24"
                                    xmlns="http://www.w3.org/2000/svg"
                                >
                                    <path
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth="2"
                                        d="M5 13l4 4L19 7"
                                    ></path>
                                </svg>
                            </div>
                            <p>Successly bought access</p>
                        </div>
                    </div>
                </Modal>
            </main>
            <div
                className="fixed bottom-10 right-10"
                style={{ visibility: username != "" ? "visible" : "hidden" }}
            >
                <MakePostButton
                    fetchPosts={fetchPosts}
                    username={username}
                ></MakePostButton>
            </div>
        </div>
    );
}
